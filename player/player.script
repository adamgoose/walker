local walk_speed = 150
local sprint_speed = 300

local max_y = 720
local min_y = 0
local max_x = 1280
local min_x = 0
local dirs = {'n', 'e', 's', 'w'}

go.property("skin", 0)

function init(self)
	self.state = "idle"
	self.diry = "s"
	self.dirx = ""
	self.animation = ""
	self.sprinting = false
	self.speed = vmath.vector3()
	self.report_player_position = false
end

function update(self, dt)
	if self.animation == "" and self.skin ~= 0 then
		self.animation = self.skin .. '_idle_s'
		msg.post("#sprite", "play_animation", { id=hash(self.animation) })
	end
	
	-- Move
	local p = go.get_position()
	if p.y >= max_y then
		p.y = max_y
		if self.speed.y > 0 then
			self.speed.y = 0
		end
	end
	if p.y <= min_y then
		p.y = min_y
		if self.speed.y < 0 then
			self.speed.y = 0
		end
	end
	if p.x >= max_x then
		p.x = max_x
		if self.speed.x > 0 then
			self.speed.x = 0
		end
	end
	if p.x <= min_x then
		p.x = min_x
		if self.speed.y < 0 then
			self.speed.x = 0
		end
	end
	
	
	p = p + self.speed * dt
	go.set_position(p)

	-- Remember state
	local oldState = self.state
	local oldDirx = self.dirx
	local oldDiry = self.diry

	-- Walking or Idle
	if self.speed == vmath.vector3() then
		self.state = 'idle'
	else
		self.state = 'walk'
	end

	-- E/W Movement
	if self.speed.x > 0 then
		self.dirx = 'e'
	elseif self.speed.x < 0 then
		self.dirx = 'w'
	elseif self.speed ~= vmath.vector3() then
		self.dirx = ''
	end

	-- N/S Movement
	if self.speed.y > 0 then
		self.diry = 'n'
	elseif self.speed.y < 0 then
		self.diry = 's'
	elseif self.speed ~= vmath.vector3() then
		self.diry = ''
	end

	local animation = self.skin .. '_' .. self.state .. '_' .. self.diry .. self.dirx

	-- Conditionally report position
	if self.report_player_position then
		if (self.speed ~= vmath.vector3()) or (self.state ~= oldState) then
			msg.post("/game", "player_position", {
				position = {
					x = p.x,
					y = p.y,
					z = p.z
				},
				skin = self.skin,
				animation = animation
			})
		end
	end
	
	-- Conditionally update animation
	if (self.dirx ~= oldDirx) or (self.diry ~= oldDiry) or (self.state ~= oldState) then
		msg.post("#sprite", "play_animation", { id=hash(animation) })
	end

	-- Clean up
	self.speed = vmath.vector3()
	self.max_speed = 150
end

function on_message(self, message_id, message, sender)
	if message_id == hash("enable_control") then
		msg.post(".", "acquire_input_focus")
	end
	if message_id == hash("report_player_position") then
		self.report_player_position = true
	end
	if message_id == hash("email") then
		label.set_text("#email", message.email)
	end
	if message_id == hash("move") then
		self.skin = message.skin
		
		-- set position
		local p = vmath.vector3(message.position.x, message.position.y, message.position.z)
		go.set_position(p)

		-- conditionally play animation
		if message.animation ~= self.animation then
			self.animation = message.animation
			msg.post("#sprite", "play_animation", { id=hash(self.animation) })
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("sprint") then
		if action.released then
			self.sprinting = false
		else
			self.sprinting = true
		end
	end

	local speed = walk_speed
	if self.sprinting then
		speed = sprint_speed
	end
	if action.released then
		speed = 0
	end


	if action_id == hash("n") then
		self.speed.y = self.speed.y + speed
	end
	if action_id == hash("s") then
		self.speed.y = self.speed.y + speed * -1
	end
	if action_id == hash("e") then
		self.speed.x = self.speed.x + speed
	end
	if action_id == hash("w") then
		self.speed.x = self.speed.x + speed * -1
	end
end